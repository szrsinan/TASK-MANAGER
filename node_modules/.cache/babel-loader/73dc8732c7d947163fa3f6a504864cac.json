{"ast":null,"code":"import { CREATE_TASK } from \"../actions/types\";\nimport { EDIT_TASK } from \"../actions/types\";\nimport { REMOVE_TASK } from \"../actions/types\";\nconst initialState = [// {\n  //     id: 1,\n  //     title: \"Task Manager\",\n  //     description: \"Develop Task Manager with React!\",\n  //     status: \"Completed\",\n  // }, \n  // {\n  //     id: 2,\n  //     title: \"Front-End\",\n  //     description: \"Start and Complete Front-End Bootcamp\",\n  //     status: \"In Progress\",\n  // },\n  // {\n  //     id: 3,\n  //     title: \"Learn UI/UX\",\n  //     description: \"Take free online course about UI/UX design!\",\n  //     status: \"Unstarted\",\n  // }, \n];\n\nconst tasks = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    tasks: initialState\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case EDIT_TASK:\n      {\n        return {\n          tasks: state.tasks.map(task => {\n            if (task.id === payload.id) {\n              return Object.assign({}, task, payload.params);\n            }\n\n            return task;\n          })\n        };\n      }\n\n    case CREATE_TASK:\n      {\n        return {\n          tasks: state.tasks.concat(action.payload)\n        };\n      }\n\n    case REMOVE_TASK:\n      {\n        return {\n          tasks: state.tasks.filter(task => task.id !== action.id)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/Users/simonsezar/Documents/projects/task-manager/src/reducers/index.js"],"names":["CREATE_TASK","EDIT_TASK","REMOVE_TASK","initialState","tasks","state","action","payload","type","map","task","id","Object","assign","params","concat","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAAG,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBiB,CAArB;;AAqBA,MAAMC,KAAK,GAAG,YAA2C;AAAA,MAA1CC,KAA0C,uEAAlC;AAACD,IAAAA,KAAK,EAAED;AAAR,GAAkC;AAAA,MAAXG,MAAW;AAErD,QAAK;AAACC,IAAAA;AAAD,MAAYD,MAAjB;;AACA,UAAOA,MAAM,CAACE,IAAd;AACI,SAAKP,SAAL;AAAiB;AACb,eAAO;AACHG,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,GAAZ,CAAiBC,IAAD,IAAU;AAC7B,gBAAGA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAvB,EAA2B;AACvB,qBAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,EAAwBH,OAAO,CAACO,MAAhC,CAAP;AACH;;AACD,mBAAOJ,IAAP;AACH,WALM;AADJ,SAAP;AAQH;;AACD,SAAKV,WAAL;AAAkB;AACd,eAAM;AACFI,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYW,MAAZ,CAAmBT,MAAM,CAACC,OAA1B;AADL,SAAN;AAGH;;AACD,SAAKL,WAAL;AAAkB;AACd,eAAO;AACHE,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYY,MAAZ,CAAmBN,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAWL,MAAM,CAACK,EAA7C;AADJ,SAAP;AAGH;;AAED;AACI,aAAON,KAAP;AAvBR;AAyBH,CA5BD;;AA8BA,eAAeD,KAAf","sourcesContent":["import { CREATE_TASK } from \"../actions/types\";\nimport { EDIT_TASK } from \"../actions/types\";\nimport { REMOVE_TASK } from \"../actions/types\";\n\n\nconst initialState = [\n    // {\n    //     id: 1,\n    //     title: \"Task Manager\",\n    //     description: \"Develop Task Manager with React!\",\n    //     status: \"Completed\",\n    // }, \n    // {\n    //     id: 2,\n    //     title: \"Front-End\",\n    //     description: \"Start and Complete Front-End Bootcamp\",\n    //     status: \"In Progress\",\n    // },\n    // {\n    //     id: 3,\n    //     title: \"Learn UI/UX\",\n    //     description: \"Take free online course about UI/UX design!\",\n    //     status: \"Unstarted\",\n    // }, \n];\n\nconst tasks = (state = {tasks: initialState}, action) => {\n    \n    const{payload} = action;\n    switch(action.type){\n        case EDIT_TASK : {\n            return {\n                tasks: state.tasks.map((task) => {\n                    if(task.id === payload.id) {\n                        return Object.assign({}, task, payload.params);\n                    }\n                    return task;\n                }),\n            };\n        }\n        case CREATE_TASK: {\n            return{\n                tasks: state.tasks.concat(action.payload)\n            };\n        }\n        case REMOVE_TASK: {\n            return {\n                tasks: state.tasks.filter(task => task.id !==action.id)\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default tasks;"]},"metadata":{},"sourceType":"module"}