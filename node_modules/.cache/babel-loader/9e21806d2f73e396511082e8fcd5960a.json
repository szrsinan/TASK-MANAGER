{"ast":null,"code":"import { CREATE_TASK } from \"../actions/types\";\nimport { EDIT_TASK } from \"../actions/types\";\nimport { REMOVE_TASK } from \"../actions/types\";\nconst initialState = [{\n  id: 1,\n  title: \"Task Manager\",\n  description: \"Develop Task Manager with React!\",\n  status: \"Completed\"\n}, {\n  id: 2,\n  title: \"Front-End\",\n  description: \"Start and Complete Front-End Bootcamp\",\n  status: \"In Progress\"\n}, {\n  id: 3,\n  title: \"Learn UI/UX\",\n  description: \"Take free online course about UI/UX design!\",\n  status: \"Unstarted\"\n}, {\n  id: 4,\n  title: \"Learn Figma\",\n  description: \"Learn Figma and make designs!\",\n  status: \"Unstarted\"\n}, {\n  id: 5,\n  title: \"\",\n  description: \"!\",\n  status: \"Unstarted\"\n}];\n\nconst tasks = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    tasks: initialState\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case EDIT_TASK:\n      {\n        return {\n          tasks: state.tasks.map(task => {\n            if (task.id === payload.id) {\n              return Object.assign({}, task, payload.params);\n            }\n\n            return task;\n          })\n        };\n      }\n\n    case CREATE_TASK:\n      {\n        return {\n          tasks: state.tasks.concat(action.payload)\n        };\n      }\n\n    case REMOVE_TASK:\n      {\n        return {\n          tasks: state.tasks.filter(task => task.id !== action.id)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/Users/simonsezar/Documents/projects/task-manager/src/reducers/index.js"],"names":["CREATE_TASK","EDIT_TASK","REMOVE_TASK","initialState","id","title","description","status","tasks","state","action","payload","type","map","task","Object","assign","params","concat","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,WAAW,EAAE,kCAHjB;AAIIC,EAAAA,MAAM,EAAE;AAJZ,CADiB,EAOjB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,WAFX;AAGIC,EAAAA,WAAW,EAAE,uCAHjB;AAIIC,EAAAA,MAAM,EAAE;AAJZ,CAPiB,EAajB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,aAFX;AAGIC,EAAAA,WAAW,EAAE,6CAHjB;AAIIC,EAAAA,MAAM,EAAE;AAJZ,CAbiB,EAmBjB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,aAFX;AAGIC,EAAAA,WAAW,EAAE,+BAHjB;AAIIC,EAAAA,MAAM,EAAE;AAJZ,CAnBiB,EAyBjB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,EAFX;AAGIC,EAAAA,WAAW,EAAE,GAHjB;AAIIC,EAAAA,MAAM,EAAE;AAJZ,CAzBiB,CAArB;;AAkCA,MAAMC,KAAK,GAAG,YAA2C;AAAA,MAA1CC,KAA0C,uEAAlC;AAACD,IAAAA,KAAK,EAAEL;AAAR,GAAkC;AAAA,MAAXO,MAAW;AAErD,QAAK;AAACC,IAAAA;AAAD,MAAYD,MAAjB;;AACA,UAAOA,MAAM,CAACE,IAAd;AACI,SAAKX,SAAL;AAAiB;AACb,eAAO;AACHO,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,GAAZ,CAAiBC,IAAD,IAAU;AAC7B,gBAAGA,IAAI,CAACV,EAAL,KAAYO,OAAO,CAACP,EAAvB,EAA2B;AACvB,qBAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwBH,OAAO,CAACM,MAAhC,CAAP;AACH;;AACD,mBAAOH,IAAP;AACH,WALM;AADJ,SAAP;AAQH;;AACD,SAAKd,WAAL;AAAkB;AACd,eAAM;AACFQ,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYU,MAAZ,CAAmBR,MAAM,CAACC,OAA1B;AADL,SAAN;AAGH;;AACD,SAAKT,WAAL;AAAkB;AACd,eAAO;AACHM,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYW,MAAZ,CAAmBL,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAWM,MAAM,CAACN,EAA7C;AADJ,SAAP;AAGH;;AAED;AACI,aAAOK,KAAP;AAvBR;AAyBH,CA5BD;;AA8BA,eAAeD,KAAf","sourcesContent":["import { CREATE_TASK } from \"../actions/types\";\nimport { EDIT_TASK } from \"../actions/types\";\nimport { REMOVE_TASK } from \"../actions/types\";\n\n\nconst initialState = [\n    {\n        id: 1,\n        title: \"Task Manager\",\n        description: \"Develop Task Manager with React!\",\n        status: \"Completed\",\n    }, \n    {\n        id: 2,\n        title: \"Front-End\",\n        description: \"Start and Complete Front-End Bootcamp\",\n        status: \"In Progress\",\n    },\n    {\n        id: 3,\n        title: \"Learn UI/UX\",\n        description: \"Take free online course about UI/UX design!\",\n        status: \"Unstarted\",\n    }, \n    {\n        id: 4,\n        title: \"Learn Figma\",\n        description: \"Learn Figma and make designs!\",\n        status: \"Unstarted\",\n    },\n    {\n        id: 5,\n        title: \"\",\n        description: \"!\",\n        status: \"Unstarted\",\n    }, \n\n];\n\nconst tasks = (state = {tasks: initialState}, action) => {\n    \n    const{payload} = action;\n    switch(action.type){\n        case EDIT_TASK : {\n            return {\n                tasks: state.tasks.map((task) => {\n                    if(task.id === payload.id) {\n                        return Object.assign({}, task, payload.params);\n                    }\n                    return task;\n                }),\n            };\n        }\n        case CREATE_TASK: {\n            return{\n                tasks: state.tasks.concat(action.payload)\n            };\n        }\n        case REMOVE_TASK: {\n            return {\n                tasks: state.tasks.filter(task => task.id !==action.id)\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default tasks;"]},"metadata":{},"sourceType":"module"}